#!/bin/bash

if [ -z "${BIGQUERY_CREDENTIALS}" ]; then
  echo "Bigquery credentials environment variables must be defined or hardcoded in this script."
  exit 1
fi

if [ -z "${BIGQUERY_BUCKET}" ]; then
  echo "GCP bucket environment variables must be defined or hardcoded in this script."
  exit 1
fi

{% if as_version is version_compare('7.4', '>=') %}

DATA_WAREHOUSE_NAME="BigQuery Data Warehouse"
CONNECTION_ID="$1"
DEFAULT_ORG_ID="default"

echo "Setting up $DATA_WAREHOUSE_NAME with connection ID $CONNECTION_ID"
{{ image_util_dir }}/create-data-warehouse.sh "$DATA_WAREHOUSE_NAME" "$CONNECTION_ID"

{% if secured == "yes" %}
{% set protocol = "https" %}
jwt=`curl -s -k -u admin:admin https://localhost:10500/default/auth`
{% else %}
{% set protocol = "http" %}
jwt=`curl -s -u admin:admin http://localhost:10500/default/auth`
{% endif %}

cgid=`curl -k -s -H "Authorization:Bearer $jwt" {{ protocol }}://localhost:10502/connection-groups/orgId/$DEFAULT_ORG_ID/conn/$CONNECTION_ID | jq -r .response.id`

if [ -z "$cgid" ]; then
   echo Failed to get the connection group ID corresponding to connection ID $CONNECTION_ID
   exit 1
fi

gbqCredentialsFile="{{ atscale_install_target }}/conf/gbq-credentials.json"

base64 --decode <<< "${BIGQUERY_CREDENTIALS:-}" | tr -d [:cntrl:] > $gbqCredentialsFile

curl -f -k -s -X PUT -H "Authorization:Bearer $jwt" \
  -F name="$DATA_WAREHOUSE_NAME" \
  -F connectionId="$CONNECTION_ID" \
  -F filesystemType="gs" \
  -F filesystemUri="gs://$BIGQUERY_BUCKET" \
  -F aggregateSchema="atscale" \
  -F file=@$gbqCredentialsFile {{ protocol }}://localhost:10502/connection-groups/orgId/default/connection-group/$cgid/multipart > /dev/null
RET=$?

if [ $RET -ne 0 ]; then
  echo "Failed to update '$DATA_WAREHOUSE_NAME' connection group ($RET)."
  exit 1
fi

POST_BODY=$(tr -d [:cntrl:] <<ENDL
  {
    "name" : "BigQuery",
    "connectorType" : "bigquery",
    "hosts" : "https://www.googleapis.com/bigquery/v2",
    "port" : 80,
    "queryRoles" : ["large_user_query_role", "small_user_query_role", "system_query_role"]
  }
ENDL
)

curl -f -s -k -X POST -H "Authorization:Bearer $jwt" -H "Content-Type: application/json" --data "$POST_BODY" {{ protocol }}://localhost:10502/connection-groups/orgId/$DEFAULT_ORG_ID/connection-group/$cgid > /dev/null
RET=$?

if [ $RET -ne 0 ]; then
  echo "Failed to add a BigQuery SQL Engine to the '$DATA_WAREHOUSE_NAME' connection group ($RET)."
  exit 1
fi

{% elif as_version is version_compare('7.0', '>=') %}

DATE=$(date +%Y%m%d)
DT=$(date +%Y%m%d%H%M)
ENV_UUID="prod"
GROUP_UUID="$DATE-2222-2222-0000-$DT"
SUBGROUP_UUID="$DATE-3333-3333-0000-$DT"

{{ atscale_install_target}}/current/bin/database/postgres_psql < <(cat <<ENDL
-- Environment
insert into environment (env_id, org_id, name, default_env, created_at, updated_at, hiveserver2_port )
values ( '$ENV_UUID', 'default', 'prod', 't', now(), now(), 11111 );

-- Connection group
insert into connection_groups ( org_id, conn_id, hdfs_uri, default_schema, id, name, database )
values ( 'default', '$CONNECTION_ID', 'gs://$BIGQUERY_BUCKET', 'atscale', '$GROUP_UUID', 'bigquery', null );

insert into connection_group_extra_props( id, connection_group_id, property_name, property_value, created_at )
values
( '$DATE-2222-2222-0001-$DT', '$GROUP_UUID', 'keyFile', '$({{ atscale_install_target }}/bin/od -cmd=e -val="$(base64 --decode <<< "${BIGQUERY_CREDENTIALS:-}" | tr -d [:cntrl:])")', now() ),
( '$DATE-2222-2222-0002-$DT', '$GROUP_UUID', 'keyFileName', 'atscale-bigquery.json', now() );

insert into connection_groups_environments( id, organization_id, environment_id, connection_group_id, created_at )
values ( '$DATE-2222-2222-0006-$DT', 'default', '$ENV_UUID', '$GROUP_UUID', now() );


-- Connection subgroup
insert into connection_subgroups( connection_subgroup_id, name, hosts, port, db_engine_protocol, username, password, connection_group_id )
values( '$SUBGROUP_UUID', 'bigquery', 'https://www.googleapis.com/bigquery/v2', 80, 'bigquery', '', '', '$GROUP_UUID' );

insert into connection_subgroup_roles( id, connection_subgroup_id, role, created_at )
values
( '$DATE-3333-3333-0001-$DT', '$SUBGROUP_UUID', 'large_user_query_role', now() ),
( '$DATE-3333-3333-0002-$DT', '$SUBGROUP_UUID', 'small_user_query_role', now() ),
( '$DATE-3333-3333-0003-$DT', '$SUBGROUP_UUID', 'system_query_role', now() );

ENDL
)

{% else %}

DATE=$(date +%Y%m%d)
DT=$(date +%Y%m%d%H%M)
ENV_UUID="prod"
GROUP_UUID="$DATE-2222-2222-0000-$DT"
SUBGROUP_UUID="$DATE-3333-3333-0000-$DT"

BIGQUERY_CREDENTIALS_PATH="{{ atscale_home }}/atscale-bigquery.json"
echo "${BIGQUERY_CREDENTIALS:-}" | base64 --decode | tr -d [:cntrl:] > $BIGQUERY_CREDENTIALS_PATH

BIGQUERY_PROJECT_ID="$( sed 's/.*"project_id": "\([^"]*\)",.*/\1/' $BIGQUERY_CREDENTIALS_PATH)"
BIGQUERY_CLIENT_ID="$( sed 's/.*"client_email": "\([^"]*\)",.*/\1/' $BIGQUERY_CREDENTIALS_PATH)"
BIGQUERY_CLIENT_EMAIL="$( sed 's/.*"client_id": "\([^"]*\)",.*/\1/' $BIGQUERY_CREDENTIALS_PATH)"

{{ atscale_install_target}}/current/bin/database/postgres_psql < <(cat <<ENDL
-- Environment
insert into environment (env_id, org_id, name, default_env, created_at, updated_at, hiveserver2_port )
values ( '$ENV_UUID', 'default', 'prod', 't', now(), now(), 11111 );

-- Connection group
insert into connection_groups ( org_id, conn_id, hdfs_uri, default_schema, id, name, database )
values ( 'default', '$CONNECTION_ID', 'gs://$BIGQUERY_BUCKET', 'atscale', '$GROUP_UUID', 'bigquery', null );

insert into connection_group_extra_props( id, connection_group_id, property_name, property_value, created_at )
values
( '$DATE-2222-2222-0001-$DT', '$GROUP_UUID', 'projectId', '$BIGQUERY_PROJECT_ID', now() ),
( '$DATE-2222-2222-0002-$DT', '$GROUP_UUID', 'oauthPvtKeyPath', '$BIGQUERY_CREDENTIALS_PATH', now() );

insert into connection_groups_environments( id, organization_id, environment_id, connection_group_id, created_at )
values ( '$DATE-2222-2222-0006-$DT', 'default', '$ENV_UUID', '$GROUP_UUID', now() );


-- Connection subgroup
insert into connection_subgroups( connection_subgroup_id, name, hosts, port, db_engine_protocol, username, password, connection_group_id )
values( '$SUBGROUP_UUID', 'bigquery', 'https://www.googleapis.com/bigquery/v2', 80, 'bigquery', '', '', '$GROUP_UUID' );

insert into connection_subgroup_extra_props( id, connection_subgroup_id, property_name, property_value, created_at )
values
( '$DATE-3333-3333-0001-$DT', '$SUBGROUP_UUID', 'projectId', '$BIGQUERY_PROJECT_ID', now() ),
( '$DATE-3333-3333-0002-$DT', '$SUBGROUP_UUID', 'clientId', '$BIGQUERY_CLIENT_ID', now() ),
( '$DATE-3333-3333-0003-$DT', '$SUBGROUP_UUID', 'oauthServiceAcctEmail', '$BIGQUERY_CLIENT_EMAIL', now() ),
( '$DATE-3333-3333-0004-$DT', '$SUBGROUP_UUID', 'oauthPvtKeyPath', '$BIGQUERY_CREDENTIALS_PATH', now() );

insert into connection_subgroup_roles( id, connection_subgroup_id, role, created_at )
values
( '$DATE-3333-3333-0001-$DT', '$SUBGROUP_UUID', 'large_user_query_role', now() ),
( '$DATE-3333-3333-0002-$DT', '$SUBGROUP_UUID', 'small_user_query_role', now() ),
( '$DATE-3333-3333-0003-$DT', '$SUBGROUP_UUID', 'system_query_role', now() );

ENDL
)
{% endif %}
